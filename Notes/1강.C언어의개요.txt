1강 강의 목차

1. C 언어의 정의, 역사, 특징
2. C 프로그램의 작성 및 준비
3. C 프로그램의 구성
4. 에러와 경고

----------------------------------------------------------

1. C 언어의 정의, 역사, 특징

C언어란? 
    프로그래밍 언어

프로그래밍 언어란? 
    사람과 컴파일러가(컴퓨터용 번역기) 이해할 수 있도록 약속된 형태의 언어

C언어는 컴파일러가 필요하다. 컴파일러는 여러 종류가 있다.
    1) 어셈블러 Assembler
        기호로 표현된 어셈블리 코드를 기계어로 번역하는 번역기
    2) 인터프리터 Interpreter
        고급어를 한 단계씩 기계어로 해석하여 실행하는 언어처리 프로그램
    3) 전처리기 Pre-processor 
    4) 컴파일러 

C언어의 역사
    - 데니스 리치가 1972년 개발
    - UNIX 운영체제 구현에 사용할 목적으로 개발
        기종간 호환성을 가진 고급이면서 하드웨어 제어를 위한 NEW 언어의 필요성
    - C의 등장으로 어셈블리언어로 된 UNIX 운영체제가 거의 C언어로 대체됨

C언어의 특징
    - 높은 프로그램 이식성
    - 간단한 문법 -> 함축적 프로그램 작성 용이
    - 저급언어의 특성을 가진 고급언어

----------------------------------------------------------

2. C 프로그램의 작성 및 준비

에디터와 컴파일러가 필요함
    에디터 : 에디터임
    C 컴파일러 : Turbo C/C++, Dev-C++, Visual C++, GCC... etc
        최근 나오는 컴파일러는 C,C++이 같이 붙어있는 경우가 많은데 확장자를 인식해서 컴파일해줌.

일반적인 프로그램 개발 단계
    1) 프로그램 목적 정의
    2) 프로그램 설계
    3) 소스코드 작성
    4) 컴파일/링크
    5) 프로그램 실행
    6) 테스트와 디버깅
    7) 유지보수
    
C 프로그램의 완성 과정
    1) 코딩 Coding
        문제에 대한 설계를 바탕으로 소스코드를 작성하고 소스파일을 생성하는 과정
    2) 컴파일 Compile
        소스파일이 목적파일(Object file)로 변환되는 과정
<<<<<<< HEAD
    3) 링킹
=======
    +) 에러있으면 수정...
    3) 링킹 Linking
        목적파일을 실행파일(execution file)로 변환하는 과정.
        목적파일과 라이브러리 여러개가 모여야(linking되어야) 실제 실행파일(.exe)가 생성됨
    +) 에러있으면 수정...
    4) 실행파일 생성

솔루션과 프로젝트의 개념
    솔루션 {
        프로젝트 {
            실행파일.exe
            실행파일.exe
        }
        프로젝트 {
            실행파일.exe
            실행파일.exe
        }
    }

----------------------------------------------------------

3. C 프로그램의 구성

C프로그램의 기본 구조
    도입부 
    void Main(){ 
        선언문
        치환문
        제어문
        함수호출
    }
    호출된 함수{} 

    1) 도입부 : 프로그램 전체에 적용되는 사항 기술
    2) 메인 함수 : 가장 먼저 호출되는 함수로 반드시 존재
    3) 호출된 함수 : 메인 함수에서 호출되는 함수에 대한 정의

    - 반드시 1개 이상의 함수를 포함해야함
    - 그 함수는 Main()함수임
    - 중괄호(스코프) 사용
    - 전처리기(preprocessor)제외하고 문장 끝에는 ; 붙이기


C 프로그램의 구성 요소
    1) 예약어 Reserved word
        - 자료형 관련 예약어
        - 기억 관련 예약어
        - 제어 관련 예약어
        - 기타 예약어 
    2) 명칭 Identifier
        - 몇가지 규칙이 있음
    3) 상수 Constant
        - 수치상수, 문자 상수, 문자열 상수
    4) 연산자 Operator
        - 각종연산 수행
        - 다른 언어에 비해 연산자가 많음
    5) 설명문 (주석)
        - 여러줄은 /**/
        - 한 줄은 //

명령어 규칙
    - 영문과 숫자의 조합
    - 첫문자는 영문이나 언더바
    - 언더바 제외 특문 사용 불가
    - 예약어 사용 불가
    - 공백 불가
    - 대문자와 소문자 구분
    - 컴파일러 따라 차이가 있으나 일반적으로 32자까지 인식가능

----------------------------------------------------------

4. 에러와 경고

Error 에러란?
    컴파일 시 문법상 잘못된 경우 -> 반드시 수정해야 실행파일 생성됨

Warning 경고란?
    경미한 실수
    이식성이나 권장하지 않는 방법으로 작성하였을때
    보고 수정하거나 말거나 하면 됨 
>>>>>>> de58f48 (setting report for c programming)
